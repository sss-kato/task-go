name: Task-Go
on: push

env:
  DB_USER: ${{secrets.DB_USER}}
  DB_PW: ${{secrets.DB_PW}}
  DB_HOST: ${{secrets.DB_HOST}}
  DB_PORT: ${{secrets.DB_PORT}}
  DB_NAME: ${{secrets.DB_NAME}}

jobs: 
  build: 
    name: Go Test
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.18.0'
      
      - name: Bracnk Checkout
        uses: actions/checkout@v2
        with: 
          ref: ${{ github.ref }}
      
      - name: Go Build
        run: go build

      - name: Docker Compose Up
        run: docker-compose up -d

      - name: Install golangci-lint
        run: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.57.1

      - name: golangci-lint version
        run: golangci-lint --version

      - name: Install golang-migrate
        run: |
          curl -L https://packagecloud.io/golang-migrate/migrate/gpgkey | sudo apt-key add -
          echo "deb https://packagecloud.io/golang-migrate/migrate/ubuntu/ $(lsb_release -sc) main" | sudo tee /etc/apt/sources.list.d/migrate.list
          sudo apt-get update
          sudo apt-get install -y migrate

      - name: Migration
        run: migrate --path ./migrations --database 'postgresql://${{ env.DB_USER }}:${{ env.DB_PW }}@${{ env.DB_HOST }}:${{ env.DB_PORT }}/${{ env.DB_NAME }}?sslmode=disable' -verbose up

      - name: Go Run TestCode
        run: go test -v  -cover ./...
